@tailwind base;
@tailwind components;
@tailwind utilities;

/* Element Specific Global Rules */

html {
    height: 100%;
    width: 100%;
    padding: 0%;
    margin: 0%;
    overflow: hidden;
}

body {
    height: 100%;
    width: 100%;
    padding: 0%;
    margin: 0%;
}

input:focus-visible {
    outline: none;
}

::selection {
    background-color: #8C8C8C;
}

#root {
    height: 100%;
    width: 100%;
    padding: 0%;
    margin: 0%;
}

/* Backgrounds */

.background-lightest {
    background-color: #e5e5e5;
}

.background-lighter {
    background-color: #dfdfdf;
}

.background-light {
    background-color: #D9D9D9;
}

.background-dark {
    background-color: #C5C5C5;
}

.background-slightly-dark {
    background-color: #a5a5a5;
}

.background-darker {
    background-color: #8C8C8C;
}

.hover-background-dark:hover {
    background-color: #C5C5C5;
}

.hover-background-slightly-darker:hover {
    background-color: #8C8C8C3a;
}

.hover-background-darker:hover {
    background-color: #8C8C8C;
}

/* Borders */

.border-bottom-black {
    border-bottom: 1px solid black;
}

.border-bottom-darker {
    border-bottom: 1px solid #8C8C8C;
}

.border-top-darker {
    border-top: 1px solid #8C8C8C;
}

.border-left-darker {
    border-left: 1px solid #8C8C8C;
}

.border-right-darker {
    border-right: 1px solid #8C8C8C;
}

.border-darker {
    border: 1px solid #8C8C8C;
}

.border-black {
    border: 1px solid black;
}

.border-charcoal {
    border: 1px solid rgb(27, 27, 27);
}

.hover-border-black:hover {
    border: 1px solid black;
}

.active-border-black-else-darker {
    border: 1px solid #8C8C8C;
}

.active-border-black-else-darker:active {
    border: 1px solid black;
}

.thicker-border-black {
    border: 2px solid black;
}

.border-left-dark {
    border-left: 1px solid #C5C5C5;
}

/* 
The bottom class displays a dark border or a black border, depending on the hover status.
This is done to prevent any partial movement of the element the class is applied to, when hovered,
as border occupies its own space.

In other words, use this in place of something like

.hover-border-black:hover {
    border: 1px solid black
}
*/
.hover-border-black-else-dark {
    border: 1px solid #C5C5C5;
}

.hover-border-black-else-dark:hover {
    border: 1px solid black;
}

/* Text Properties */

.vertical-left-up-text {
    writing-mode: vertical-lr;
    transform: rotate(180deg);
}

.break-and-wrap-large-words {
    overflow-wrap: break-word;
}

.hyphenate-word-breaks-automatically {
    hyphens: auto;
}

/* Scrollbar Properties */

.stable-scrollbar-gutter {
    scrollbar-gutter: stable;
}

.thin-scrollbar-xy::-webkit-scrollbar {
    width: 2px;
}

.thin-scrollbar-xy::-webkit-scrollbar-thumb {
    background: #8C8C8C;
}

.thin-scrollbar-xy::-webkit-scrollbar-track {
    background: #C5C5C5;
}

.thin-scrollbar-xy::-webkit-scrollbar:horizontal {
    height: 2px;
}

.thin-scrollbar-xy::-webkit-scrollbar-thumb:horizontal {
    background: #8C8C8C;
}

.thin-scrollbar-xy::-webkit-scrollbar-track:horizontal {
    background: #C5C5C5;
}

.hide-scrollbar::-webkit-scrollbar {
    width: 0px;
    height: 0px;
}

.hide-scrollbar::-webkit-scrollbar-thumb {
    background: transparent;
}

.style-scrollbar-rounded-no-buttons::-webkit-scrollbar {
    border-radius: 3px;
    width: 0.5rem;
    background-color: rgba(0, 0, 0, 0.1);
}

.style-scrollbar-rounded-no-buttons::-webkit-scrollbar-thumb {
    border-radius: 3px;
    background-color: rgba(0, 0, 0, 0.4);
}

.style-scrollbar-rounded-no-buttons::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    border-radius: 3px;
}

.style-scrollbar-slightly-rounded::-webkit-scrollbar {
    width: 0.5rem;
}

.style-scrollbar-slightly-rounded::-webkit-scrollbar-thumb {
    border-radius: 3px;
    background-color: #8C8C8Ca0;
}

/* Dimensions */

.top-bar-height {
    height: 2.75rem;
}

.main-screen-height {
    height: calc(100vh - 4.75rem);
}

.bottom-bar-height {
    height: 2rem;
}

.terminal-nav-height {
    height: 2rem;
}

.terminal-content-height {
    height: calc(100% - 2rem);
}

/* Shadows */

.thin-inset-box-shadow {
    box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.3);
}

.active-thin-inset-box-shadow:active {
    box-shadow: inset 0px 0px 4px 0px rgba(0, 0, 0, 0.3);
}

.thin-box-shadow-right {
    box-shadow: 2px 0px 9px 0px rgba(0, 0, 0, 0.3);
}

.thin-box-shadow-left {
    box-shadow: -2px 0px 9px 0px rgba(0, 0, 0, 0.3);
}

/* Placeholders */

.placeholder-style::placeholder {
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 300;
    letter-spacing: 0.05em;
    padding-top: 4px;
    padding-bottom: 4px;
    text-transform: capitalize;
    user-select: none;
}

.user-command-placeholder-style::placeholder {
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 300;
    letter-spacing: 0.05em;
    padding-top: 4px;
    padding-bottom: 4px;
    text-transform: capitalize;
    user-select: none;
    text-align: center;
    color: #585858;
}

.placeholder-light::placeholder {
    color: #e4e4e4;
}

.user-command-placeholder-style:focus::placeholder {
    color: transparent;
}

.input {
    width: 0px;
    height: 0px;
    border-style: inset;
    border-width: 0 100px 173.2px 100px;
    border-color: transparent transparent #888a8d transparent;
    float: left;
    transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform:rotate(90deg);
  }
  
  .input p {
    text-align: center;
    top: 68px;
    left: -18px;
    position: relative;
    width: 93px;
    height: 93px;
    margin: 0px;
    transform: rotate(-90deg);
    font-size:x-large;
    color: black;
  }

  .output {
    margin-top: 100px;
    width: 0px;
    height: 0px;
    border-style: inset;
    border-width: 0 100px 173.2px 100px;
    border-color: transparent transparent #888a8d transparent;
    float: left;
    transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform:rotate(-90deg);
  }
  
  .output p {
    text-align: center;
    top: 68px;
    left: -68px;
    position: relative;
    width: 93px;
    height: 93px;
    margin: 0px;
    transform: rotate(90deg);
    font-size:x-large;
    color: black;
  }

  
.data-variable-in {
    margin-top: 100px;
    border-top-right-radius: 48px;
    border-bottom-right-radius: 48px;
    border-left: 10px solid transparent;
    background-color: #647687;
    height: 100px;
    margin-left: 100px;
    padding: 3px 30px;
    text-align: center;
    align-content: center;
    font-size: 24px;
  }
  .data-variable-out {
    margin-top: 100px;
    border-top-left-radius: 48px;
    border-bottom-left-radius: 48px;
    border-left: 10px solid transparent;
    background-color: #647687;
    height: 100px;
    margin-left: 101px;
    padding: 3px 30px;
    text-align: center;
    align-content: center;
    font-size: 24px;
  }
  .triangle {
    position: absolute;
    width: 0;
    height: 0;
    margin-top: 100px;
    border-top: 50px solid transparent;
    border-bottom: 50px solid transparent; 
  
    border-right:100px solid #647687;
  }

  .triangle-right {
    position: absolute;
    width: 0;
    height: 0;
    margin-top: 100px;
    margin-left: 260px;
    border-top: 50px solid transparent;
    border-bottom: 50px solid transparent; 
  
    border-left:100px solid #647687;
  }

  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }

  .modal-content {
    background-color: white;
    padding: 20px;
    border-radius: 5px;
  }