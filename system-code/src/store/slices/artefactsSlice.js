import { createSlice } from "@reduxjs/toolkit";

// TODO 3: Update handles and params. @rohan843
const artefactsSlice = createSlice({
  name: "artefacts",
  initialState: {
    functions: {
      // NodeName: {
      //   displayName: "Name to Display",
      //   subcategorization: "Category to Place Node In",
      //   nodeType: "Full Node Type",
      //   defaultHyperparams: [...],
      //   defaultInputHandles: [...],
      //   defaultOutputHandles: [...],
      // },
      ArrayInput: {
        displayName: "Array Input",
        subcategorization: "Array I/O",
        nodeType: "FunctionNode/ArrayInput",
        defaultHyperparams: [
          {
            id: "input_shape",
            value: null,
          },
        ],
        defaultInputHandles: [],
        defaultOutputHandles: ["array"],
      },
      RecordArrayOutput: {
        displayName: "Record Array Output",
        subcategorization: "Array I/O",
        nodeType: "FunctionNode/RecordArrayOutput",
        defaultHyperparams: [],
        defaultInputHandles: ["array"],
        defaultOutputHandles: [],
      },
      GenerateAdamOptimizer: {
        displayName: "Generate ADAM Optimizer",
        subcategorization: "Optimizers",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: [],
        defaultOutputHandles: ["Optimizer"],
      },
      CreateAndApplyDenseLayer: {
        displayName: "Create and Apply Dense Layer",
        subcategorization: "Layers",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["payload"],
        defaultOutputHandles: ["payload"],
      },
      Flatten: {
        displayName: "Flatten",
        subcategorization: "Layers",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["payload"],
        defaultOutputHandles: ["payload"],
      },
      GetTunableInt: {
        displayName: "Get Tunable Int",
        subcategorization: "Tunables",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      GetTunableFromList: {
        displayName: "Get Tunable From List",
        subcategorization: "Tunables",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      RawData: {
        displayName: "Emit Raw Data",
        subcategorization: "Miscellaneous",
        nodeType: "FunctionNode/RawData",
        defaultHyperparams: [{ id: "raw-python-data", value: "None" }],
        defaultInputHandles: [],
        defaultOutputHandles: [],
      },
      ArtefactImporter: {
        displayName: "Use Another Artefact",
        subcategorization: "Miscellaneous",
        nodeType: "FunctionNode/ArtefactImporter",
        defaultHyperparams: [{ id: "imported-artefact", value: null }],
        defaultInputHandles: [],
        defaultOutputHandles: [],
      },
      GradientTape: {
        displayName: "Create Gradient Tape",
        subcategorization: "Gradient Monitoring",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: [],
        defaultOutputHandles: ["gradient-tape"],
      },
      ZerosLike: {
        displayName: "Create Zeros Array",
        subcategorization: "Array Constructors",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: [],
        defaultOutputHandles: ["array"],
      },
      OnesLike: {
        displayName: "Create Ones Array",
        subcategorization: "Array Constructors",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      Add: {
        displayName: "Add",
        subcategorization: "Arithmetic",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["addend 1", "addend 2"],
        defaultOutputHandles: ["sum"],
      },
      Subtract: {
        displayName: "Subtract",
        subcategorization: "Arithmetic",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["minuend", "subtrahend"],
        defaultOutputHandles: ["difference"],
      },
      ScalarDivide: {
        displayName: "Divide by Scalar",
        subcategorization: "Arithmetic",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["dividend", "divisor"],
        defaultOutputHandles: ["result"],
      },
      BinaryCrossentropy: {
        displayName: "Binary Crossentropy Loss",
        subcategorization: "Losses",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      Batch: {
        displayName: "Batch",
        subcategorization: "Data Transformations",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["dataset"],
        defaultOutputHandles: ["dataset"],
      },
      Shuffle: {
        displayName: "Shuffle",
        subcategorization: "Data Transformations",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["dataset"],
        defaultOutputHandles: ["dataset"],
      },
      Reshape: {
        displayName: "Reshape",
        subcategorization: "Array Manipulations",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["dataset"],
        defaultOutputHandles: ["dataset"],
      },
      EvaluateModel: {
        displayName: "Evaluate Model",
        subcategorization: "Model Testing",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      GetBestModelAfterTuning: {
        displayName: "Get Best Model After Tuning",
        subcategorization: "Model Tuning",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      LoadKerasDataset: {
        displayName: "Load Keras Dataset",
        subcategorization: "Data Loading",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
      CompileModel: {
        displayName: "Compile Model",
        subcategorization: "Model Compilation",
        nodeType: "FunctionNode",
        defaultHyperparams: [],
        defaultInputHandles: ["inSignal"],
        defaultOutputHandles: ["outSignal"],
      },
    },
  },
  reducers: {},
});

export const artefactsReducer = artefactsSlice.reducer;
